diff --git a/app/gui/qt/SonicPi.qrc b/app/gui/qt/SonicPi.qrc
index 2bebd7f25..68f7ff1d8 100644
--- a/app/gui/qt/SonicPi.qrc
+++ b/app/gui/qt/SonicPi.qrc
@@ -171,9 +171,9 @@
         <file>lang/sonic-pi_zh_HK.qm</file>
         <file>lang/sonic-pi_zh_TW.qm</file>
 
-
-
         <file>fonts/Hack-Regular.ttf</file>
         <file>fonts/Hack-Italic.ttf</file>
+        <file>fonts/Monoid-Regular.ttf</file>
+        <file>fonts/Monoid-Italic.ttf</file>
     </qresource>
 </RCC>
diff --git a/app/gui/qt/main.cpp b/app/gui/qt/main.cpp
index 728218461..27a5230e3 100644
--- a/app/gui/qt/main.cpp
+++ b/app/gui/qt/main.cpp
@@ -32,6 +32,8 @@ int main(int argc, char *argv[])
 
   QFontDatabase::addApplicationFont(":/fonts/Hack-Regular.ttf");
   QFontDatabase::addApplicationFont(":/fonts/Hack-Italic.ttf");
+  QFontDatabase::addApplicationFont(":/fonts/Monoid-Regular.ttf");
+  QFontDatabase::addApplicationFont(":/fonts/Monoid-Italic.ttf");
 
   qRegisterMetaType<SonicPiLog::MultiMessage>("SonicPiLog::MultiMessage");
 
diff --git a/app/gui/qt/mainwindow.cpp b/app/gui/qt/mainwindow.cpp
index 47a90be07..915fba74f 100644
--- a/app/gui/qt/mainwindow.cpp
+++ b/app/gui/qt/mainwindow.cpp
@@ -690,9 +690,9 @@ void MainWindow::setupWindowStructure() {
     incomingPane->setReadOnly(true);
     errorPane->setReadOnly(true);
     outputPane->setLineWrapMode(QPlainTextEdit::NoWrap);
-    outputPane->setFontFamily("Hack");
+    outputPane->setFontFamily("Monoid HalfTight");
     incomingPane->setLineWrapMode(QPlainTextEdit::NoWrap);
-    incomingPane->setFontFamily("Hack");
+    incomingPane->setFontFamily("Monoid HalfTight");
 
     if(!theme->font("LogFace").isEmpty()){
         outputPane->setFontFamily(theme->font("LogFace"));
@@ -822,6 +822,46 @@ void MainWindow::changeTab(int id){
     tabs->setCurrentIndex(id);
 }
 
+void MainWindow::changeTab0() {
+    tabs->setCurrentIndex(0);
+}
+
+void MainWindow::changeTab1() {
+    tabs->setCurrentIndex(1);
+}
+
+void MainWindow::changeTab2() {
+    tabs->setCurrentIndex(2);
+}
+
+void MainWindow::changeTab3() {
+    tabs->setCurrentIndex(3);
+}
+
+void MainWindow::changeTab4() {
+    tabs->setCurrentIndex(4);
+}
+
+void MainWindow::changeTab5() {
+    tabs->setCurrentIndex(5);
+}
+
+void MainWindow::changeTab6() {
+    tabs->setCurrentIndex(6);
+}
+
+void MainWindow::changeTab7() {
+    tabs->setCurrentIndex(7);
+}
+
+void MainWindow::changeTab8() {
+    tabs->setCurrentIndex(8);
+}
+
+void MainWindow::changeTab9() {
+    tabs->setCurrentIndex(9);
+}
+
 void MainWindow::toggleFullScreenMode() {
     piSettings->full_screen = !piSettings->full_screen;
     emit settingsChanged();
@@ -1665,8 +1705,8 @@ void MainWindow::about() {
         infoWidg->hide();
 
     } else {
-        infoWidg->raise();
-        infoWidg->show();
+        // infoWidg->raise();
+        // infoWidg->show();
     }
     infoAct->setIcon( theme->getInfoIcon( infoWidg->isVisible()));
 }
@@ -2012,8 +2052,8 @@ void MainWindow::updateAction(QAction *action, QShortcut *sc, QString tooltip,
 void MainWindow::createShortcuts()
 {
     std::cout << "[GUI] - creating shortcuts" << std::endl;
-    new QShortcut(shiftMetaKey('['), this, SLOT(tabPrev()));
-    new QShortcut(shiftMetaKey(']'), this, SLOT(tabNext()));
+    new QShortcut(metaKey('<'), this, SLOT(tabPrev()));
+    new QShortcut(shiftMetaKey('<'), this, SLOT(tabNext()));
     new QShortcut(QKeySequence("F8"), this, SLOT(reloadServerCode()));
     new QShortcut(QKeySequence("F9"), this, SLOT(toggleButtonVisibility()));
     new QShortcut(shiftMetaKey('B'), this, SLOT(toggleButtonVisibility()));
@@ -2023,6 +2063,17 @@ void MainWindow::createShortcuts()
     new QShortcut(QKeySequence("F11"), this, SLOT(toggleLogVisibility()));
     new QShortcut(shiftMetaKey('L'), this, SLOT(toggleLogVisibility()));
     new QShortcut(QKeySequence("F12"),this, SLOT(toggleScopePaused()));
+
+    new QShortcut(shiftMetaKey('1'), this, SLOT(changeTab0()));
+    new QShortcut(shiftMetaKey('2'), this, SLOT(changeTab1()));
+    new QShortcut(shiftMetaKey('3'), this, SLOT(changeTab2()));
+    new QShortcut(shiftMetaKey('4'), this, SLOT(changeTab3()));
+    new QShortcut(shiftMetaKey('5'), this, SLOT(changeTab4()));
+    new QShortcut(shiftMetaKey('6'), this, SLOT(changeTab5()));
+    new QShortcut(shiftMetaKey('7'), this, SLOT(changeTab6()));
+    new QShortcut(shiftMetaKey('8'), this, SLOT(changeTab7()));
+    new QShortcut(shiftMetaKey('9'), this, SLOT(changeTab8()));
+    new QShortcut(shiftMetaKey('0'), this, SLOT(changeTab9()));
 }
 
 void  MainWindow::createToolBar()
diff --git a/app/gui/qt/mainwindow.h b/app/gui/qt/mainwindow.h
index 6fec89903..b72696b95 100644
--- a/app/gui/qt/mainwindow.h
+++ b/app/gui/qt/mainwindow.h
@@ -104,6 +104,16 @@ signals:
         void updateLogAutoScroll();
         bool eventFilter(QObject *obj, QEvent *evt);
         void changeTab(int id);
+        void changeTab0();
+        void changeTab1();
+        void changeTab2();
+        void changeTab3();
+        void changeTab4();
+        void changeTab5();
+        void changeTab6();
+        void changeTab7();
+        void changeTab8();
+        void changeTab9();
         QString asciiArtLogo();
         void printAsciiArtLogo();
         void runCode();
diff --git a/app/gui/qt/model/sonicpitheme.cpp b/app/gui/qt/model/sonicpitheme.cpp
index 76efefb45..5a4fa0611 100644
--- a/app/gui/qt/model/sonicpitheme.cpp
+++ b/app/gui/qt/model/sonicpitheme.cpp
@@ -30,8 +30,8 @@ SonicPiTheme::SonicPiTheme(QObject *parent, QString customSettingsFilename, QStr
     loadToolBarIcons();
 
     QMap<QString, QString> themeSettings;
-    this->theme = lightTheme();
-    switchTheme( SonicPiTheme::LightMode );
+    this->theme = darkTheme();
+    switchTheme( SonicPiTheme::DarkProMode );
 
     // if(settings!=0){
     //   QStringList customSettingKeys = settings->allKeys();
@@ -66,7 +66,7 @@ void SonicPiTheme::switchTheme(Theme theme) {
         helpIcon = &default_dark_help_icon;
         helpIconActive = &default_dark_help_toggled_icon;
         recIcon = &default_dark_rec_icon;
-        recIconA = &default_dark_rec_a_icon; 
+        recIconA = &default_dark_rec_a_icon;
         recIconB = &default_dark_rec_b_icon;
         prefsIcon = &default_dark_prefs_icon;
         prefsIconActive = &default_dark_prefs_toggled_icon;
@@ -108,7 +108,7 @@ void SonicPiTheme::switchTheme(Theme theme) {
         helpIcon = &default_light_help_icon;
         helpIconActive = &default_light_help_toggled_icon;
         recIcon = &default_light_rec_icon;
-        recIconA = &default_light_rec_a_icon; 
+        recIconA = &default_light_rec_a_icon;
         recIconB = &default_light_rec_b_icon;
         prefsIcon = &default_light_prefs_icon;
         prefsIconActive = &default_light_prefs_toggled_icon;
@@ -150,7 +150,7 @@ void SonicPiTheme::switchTheme(Theme theme) {
         helpIcon = &default_hc_help_icon;
         helpIconActive = &default_hc_help_toggled_icon;
         recIcon = &default_hc_rec_icon;
-        recIconA = &default_hc_rec_a_icon; 
+        recIconA = &default_hc_rec_a_icon;
         recIconB = &default_hc_rec_b_icon;
         prefsIcon = &default_hc_prefs_icon;
         prefsIconActive = &default_hc_prefs_toggled_icon;
@@ -171,7 +171,7 @@ void SonicPiTheme::switchTheme(Theme theme) {
         helpIcon = &pro_help_icon;
         helpIconActive = &pro_help_bordered_icon;
         recIcon = &default_light_rec_icon;
-        recIconA = &default_light_rec_a_icon; 
+        recIconA = &default_light_rec_a_icon;
         recIconB = &default_light_rec_b_icon;
         prefsIcon = &default_light_prefs_icon;
         prefsIconActive = &default_light_prefs_toggled_icon;
@@ -220,25 +220,25 @@ QMap<QString, QString> SonicPiTheme::lightTheme(){
     QMap<QString, QString> themeSettings;
 
     // Light Theme Colour Palette
-    QString dt_pink = "deeppink";
-    QString dt_white = "white";
+    QString dt_pink = "#fe8019";
+    QString dt_white = "#ebdbb2";
 
 
-    QString dt_lightgrey = "#ededed"; // same as button background
-    QString dt_grey = "#d3d3d3";
-    QString dt_darkgrey = "#5e5e5e";
-    QString dt_vdarkgrey = "#1e1e1e";
-    QString dt_black = "#000";
+    QString dt_lightgrey = "#a89984"; // same as button background
+    QString dt_grey = "#928374";
+    QString dt_darkgrey = "#504945";
+    QString dt_vdarkgrey = "#3c3836";
+    QString dt_black = "#282828";
 
-    QString dt_blue = "#1e90ff";
-    QString dt_gold = "#ff8c00";
-    QString dt_orange = "darkorange";
-    QString dt_not_supported = "#000";
-    QString dt_warning = "red";
-    QString dt_green = "#61CE3C";
+    QString dt_blue = "#458588";
+    QString dt_gold = "#d79921";
+    QString dt_orange = "d65d0e";
+    QString dt_not_supported = "#282828";
+    QString dt_warning = "#cc241d";
+    QString dt_green = "#98971a";
 
-    QString theme_bg = dt_lightgrey;
-    QString theme_fg = dt_darkgrey;
+    QString theme_bg = dt_white;
+    QString theme_fg = dt_black;
 
     themeSettings["Base"] = dt_lightgrey;
     themeSettings["AlternateBase"] = dt_grey;
@@ -424,21 +424,21 @@ QMap<QString, QString> SonicPiTheme::darkTheme(){
 
     // Dark Theme Colour Palette
 
-    QString dt_pink = "deeppink";
-    QString dt_white = "white";
-    QString dt_lightgrey = "#ededed";
+    QString dt_pink = "#de8019";
+    QString dt_white = "#ebdbb2";
+    QString dt_lightgrey = "#a89984";
 
-    QString dt_grey = "#5e5e5e"; // same as button background
-    QString dt_darkgrey = "#1e1e1e";
-    QString dt_vdarkgrey = "#0d0d0d";
-    QString dt_black = "#000";
+    QString dt_grey = "#928374"; // same as button background
+    QString dt_darkgrey = "#504945";
+    QString dt_vdarkgrey = "#3c3836";
+    QString dt_black = "#282828";
 
-    QString dt_blue = "#4c83ff";
-    QString dt_gold = "#FBDE2D";
-    QString dt_orange = "darkorange";
+    QString dt_blue = "#458588";
+    QString dt_gold = "#d3869b";
+    QString dt_orange = "#d65d0e";
     QString dt_not_supported = "white";
-    QString dt_warning = "red";
-    QString dt_green = "#61CE3C";
+    QString dt_warning = "#cc241d";
+    QString dt_green = "#b8bb26";
 
     themeSettings["Base"] = dt_darkgrey;
     themeSettings["AlternateBase"] = dt_grey;
@@ -474,7 +474,7 @@ QMap<QString, QString> SonicPiTheme::darkTheme(){
     themeSettings["MenuSelected"] = dt_pink;
     themeSettings["MenuSelectedText"] = dt_white;
 
-    themeSettings["Foreground"]                      = dt_lightgrey;
+    themeSettings["Foreground"]                      = dt_white;
     themeSettings["Background"]                      = dt_black;
 
     themeSettings["HighlightedForeground"]           = dt_white;
@@ -492,7 +492,7 @@ QMap<QString, QString> SonicPiTheme::darkTheme(){
     themeSettings["DefaultForeground"]               = dt_white;
     themeSettings["DefaultBackground"]               = dt_black;
 
-    themeSettings["CommentForeground"]               = dt_grey;
+    themeSettings["CommentForeground"]               = dt_darkgrey;
     themeSettings["CommentBackground"]               = dt_black;
 
     themeSettings["PODForeground"]                   = dt_white;
@@ -523,7 +523,7 @@ QMap<QString, QString> SonicPiTheme::darkTheme(){
 
     themeSettings["ClassVariableForeground"]         = dt_not_supported;
 
-    themeSettings["BackticksForeground"]             = dt_warning;
+    themeSettings["BackticksForeground"]             = "#fb4934";
     themeSettings["BackticksBackground"]             = dt_gold;
 
     themeSettings["PercentStringxForeground"]        = dt_not_supported;
@@ -826,7 +826,7 @@ QMap<QString, QString> SonicPiTheme::highContrastTheme(){
 }
 
 QPalette SonicPiTheme::createPalette() {
-    QPalette p = QApplication::palette(); 
+    QPalette p = QApplication::palette();
     p.setColor(QPalette::WindowText,      color("WindowForeground"));
     p.setColor(QPalette::Window,          color("WindowBackground"));
     p.setColor(QPalette::Base,            color("Base"));
@@ -900,7 +900,7 @@ QString SonicPiTheme::getAppStylesheet() {
     QString selectionBackgroundColor = this->color("SelectionBackground").name();
     QString errorBackgroundColor = this->color("ErrorBackground").name();
 
-    appStyling.replace("fixedWidthFont", "\"Hack\"");
+    appStyling.replace("fixedWidthFont", "\"Monoid HalfTight\"");
 
     appStyling
         .replace("windowColor", windowColor)
diff --git a/app/gui/qt/theme/dark/doc-styles.css b/app/gui/qt/theme/dark/doc-styles.css
index f3e3fc132..65aaddbc3 100644
--- a/app/gui/qt/theme/dark/doc-styles.css
+++ b/app/gui/qt/theme/dark/doc-styles.css
@@ -1,8 +1,8 @@
 body {
   font-family: HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Liberation Sans;
   font-size: large;
-  color: white;
-  background-color: black;
+  color: #EBDBB2;
+  background-color: #282828;
 }
 
 ul.toc {
@@ -10,12 +10,12 @@ ul.toc {
 }
 
 a {
-    color: #FBDE2D;
+    color: #FABD2F;
     text-decoration: none;
 }
 
 em {
-  color: darkorange;
+  color: #FE8019;
 }
 
 .asciilogo {
@@ -24,67 +24,67 @@ em {
 }
 
 .highlight {
-    color: deeppink;
+    color: #D65D0E;
 }
 
 .error_description {
     font-size: medium;
-    background-color: deeppink;
-    color: white;
+    background-color: #D65D0E;
+    color: #EBDBB2;
 }
 
 .syntax_error_description {
     font-size: medium;
-    background-color: dodgerblue;
-    color: white;
+    background-color: #83A598;
+    color: #EBDBB2;
 }
 
 
 .backtrace {
     font-size: small;
-    color: #5e5e5e;
+    color: #D65D0E;
 }
 
 .error_msg {
     font-size: large;
-    color: deeppink;
+    color: #D65D0E;
 }
 
 .error_line {
     font-size: large;
-    color: #5e5e5e;
+    color: #928374;
 }
 
 .error_msg {
     font-size: large;
-    color: deeppink;
+    color: #D65D0E;
 }
 
 
 pre {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 code {
-    font-family: "Hack", "Courier New","Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Courier New","Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 
-    color: deeppink;
+    color: #D65D0E;
 }
 
 code .symbol {
-  color: deeppink;
+  color: #D65D0E;
 }
 
 code .number {
-  color: dodgerblue;
+  color: #83a598;
 }
 
 code .keyword {
-  color: darkorange;
+  color: #FE8019;
 }
 
 code .info {
-  color: #5e5e5e;
+  color: #928374;
 }
 
 .version {
@@ -96,65 +96,65 @@ code .info {
 }
 
 .usage {
-    color: white;
+    color: #EBDBB2;
 }
 
 .usage code {
   font-size: large;
-  color: white;
-  background-color: black;
+  color: #EBDBB2;
+  background-color: #282828;
 }
 
 h1 {
   font-size: xx-large;
   font-weight: bold;
   padding: 2px;
-  color: white;
-  background-color: deeppink;
+  color: #EBDBB2;
+  background-color: #D65D0E;
 }
 
 h2 {
   font-size: x-large;
   font-weight: bold;
   padding: 2px;
-  color: white;
-  background-color: #5d99f3;
+  color: #EBDBB2;
+  background-color: #98971A;
 }
 
 body.info {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 body.info a {
-  color: deeppink;
+  color: #D65D0E;
 }
 
 body.example code {
   font-size: large;
-  color: deeppink;
+  color: #D65D0E;
 }
 
 body.manual .introduced {
-  color: darkorange;
+  color: #FE8019;
   font-size: medium;
 }
 
 body.manual table.arguments td {
     font-size: medium;
     padding: 2px;
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 body.manual table.arguments td.odd,
 body.manual table.arguments td.odd a {
     background-color: #e8e8e8;
-    color: #5e5e5e;
+    color: #928374;
 }
 
 body.manual table.arguments td.even,
 body.manual table.arguments td.even a {
-  background-color: #5e5e5e;
-  color: white;
+  background-color: #928374;
+  color: #EBDBB2;
 }
 
 body.manual table.details td {
@@ -162,16 +162,16 @@ body.manual table.details td {
 }
 
 body.manual table.details td.key {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
   font-size: large;
 }
 
 body.manual table.details td.odd {
-  background-color: #444;
+  background-color: #3C3836;
 }
 
 body.manual table.details td.even {
-  background-color: #333;
+  background-color: #282828;
 }
 
 body.manual table.details td.odd.key {
@@ -192,16 +192,16 @@ body.manual table.examples td {
 }
 
 body.manual table.examples code {
-  color: #fff;
+  color: #EBDBB2;
   font-size: medium;
 }
 
 body.manual table.examples td.odd {
-  background-color: #444;
+  background-color: #3C3836;
 }
 
 body.manual table.examples td.even {
-  background-color: #333;
+  background-color: #282828;
 }
 
 body.manual table.examples td.odd.head {
diff --git a/app/gui/qt/theme/high_contrast/doc-styles.css b/app/gui/qt/theme/high_contrast/doc-styles.css
index 0f142d708..3a7343a65 100644
--- a/app/gui/qt/theme/high_contrast/doc-styles.css
+++ b/app/gui/qt/theme/high_contrast/doc-styles.css
@@ -57,11 +57,11 @@ em {
 }
 
 pre {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 code {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
     color: #99004A;
 }
 
@@ -116,7 +116,7 @@ h2 {
 }
 
 body.info {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 body.info a {
@@ -136,7 +136,7 @@ body.manual .introduced {
 body.manual table.arguments td {
     font-size: medium;
     padding: 2px;
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 body.manual table.arguments td.odd,
@@ -156,7 +156,7 @@ body.manual table.details td {
 }
 
 body.manual table.details td.key {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
   font-size: large;
 }
 
diff --git a/app/gui/qt/theme/light/doc-styles.css b/app/gui/qt/theme/light/doc-styles.css
index 37ae88e33..789610eef 100644
--- a/app/gui/qt/theme/light/doc-styles.css
+++ b/app/gui/qt/theme/light/doc-styles.css
@@ -57,11 +57,11 @@ em {
 }
 
 pre {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 code {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
     color: deeppink;
 }
 
@@ -116,7 +116,7 @@ h2 {
 }
 
 body.info {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 body.info a {
@@ -136,7 +136,7 @@ body.manual .introduced {
 body.manual table.arguments td {
     font-size: medium;
     padding: 2px;
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
 }
 
 body.manual table.arguments td.odd,
@@ -156,7 +156,7 @@ body.manual table.details td {
 }
 
 body.manual table.details td.key {
-    font-family: "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
+    font-family: "Monoid HalfTight", "Hack", "Menlo", "Bitstream Vera Sans Mono", "DejaVu Sans Mono",  "Liberation Mono", "DroidSansMono", "Lucida Console", Consolas, Terminal, Monaco, "Courier New", monospace;
   font-size: large;
 }
 
diff --git a/app/gui/qt/widgets/settingswidget.cpp b/app/gui/qt/widgets/settingswidget.cpp
index bcf14a487..3edac52c9 100644
--- a/app/gui/qt/widgets/settingswidget.cpp
+++ b/app/gui/qt/widgets/settingswidget.cpp
@@ -223,8 +223,8 @@ QGroupBox* SettingsWidget::createIoPrefsTab() {
 
     midi_in_ports_label = new QLabel;
     midi_out_ports_label = new QLabel;
-    midi_in_ports_label->setFont(QFont("Hack"));
-    midi_out_ports_label->setFont(QFont("Hack"));
+    midi_in_ports_label->setFont(QFont("Monoid HalfTight"));
+    midi_out_ports_label->setFont(QFont("Monoid HalfTight"));
     midi_in_ports_label->setAccessibleName("midi-in-ports-label");
     midi_out_ports_label->setAccessibleName("midi-out-ports-label");
     midi_in_ports_label->setText(tr("No connected input devices"));
@@ -245,7 +245,7 @@ QGroupBox* SettingsWidget::createIoPrefsTab() {
 
     midi_ports_box->setLayout(midi_ports_box_layout);
     midi_config_box->setLayout(midi_config_box_layout);
-    
+
     QGridLayout *io_tab_layout = new QGridLayout();
     io_tab_layout->addWidget(midi_ports_box, 0, 0, 0, 1);
     io_tab_layout->addWidget(midi_config_box, 0, 1);
@@ -288,7 +288,7 @@ QGroupBox* SettingsWidget::createEditorPrefsTab() {
     show_tabs->setToolTip(tr("Toggle visibility of the buffer selection tabs."));
     full_screen = new QCheckBox(tr("Full screen"));
     full_screen->setToolTip(tooltipStrShiftMeta('F', tr("Toggle full screen mode.")));
-   
+
     colourModeButtonGroup = new QButtonGroup(this);
     lightModeCheck = new QCheckBox(tr("Light"));
     darkModeCheck = new QCheckBox(tr("Dark"));
@@ -301,7 +301,7 @@ QGroupBox* SettingsWidget::createEditorPrefsTab() {
     colourModeButtonGroup->addButton(darkProModeCheck, 3);
     colourModeButtonGroup->addButton(highContrastModeCheck, 4);
 
-    lightModeCheck->setChecked(true);
+    darkProModeCheck->setChecked(true);
 
     QVBoxLayout *editor_display_box_layout = new QVBoxLayout;
     QVBoxLayout *editor_box_look_feel_layout = new QVBoxLayout;
@@ -637,12 +637,12 @@ void SettingsWidget::settingsChanged() {
     clear_output_on_run->setChecked(piSettings->clear_output_on_run);
     log_cues->setChecked(piSettings->log_cues);
     log_auto_scroll->setChecked(piSettings->log_auto_scroll);
-    gui_transparency_slider->setValue(piSettings->gui_transparency); 
-    lightModeCheck->setChecked( piSettings->theme == SonicPiTheme::LightMode );        
-    darkModeCheck->setChecked( piSettings->theme == SonicPiTheme::DarkMode );         
-    lightProModeCheck->setChecked( piSettings->theme == SonicPiTheme::LightProMode );     
-    darkProModeCheck->setChecked( piSettings->theme == SonicPiTheme::DarkProMode );      
-    highContrastModeCheck->setChecked( piSettings->theme == SonicPiTheme::HighContrastMode ); 
+    gui_transparency_slider->setValue(piSettings->gui_transparency);
+    lightModeCheck->setChecked( piSettings->theme == SonicPiTheme::LightMode );
+    darkModeCheck->setChecked( piSettings->theme == SonicPiTheme::DarkMode );
+    lightProModeCheck->setChecked( piSettings->theme == SonicPiTheme::LightProMode );
+    darkProModeCheck->setChecked( piSettings->theme == SonicPiTheme::DarkProMode );
+    highContrastModeCheck->setChecked( piSettings->theme == SonicPiTheme::HighContrastMode );
 
     show_scopes->setChecked(piSettings->show_scopes);
     show_scope_axes->setChecked(piSettings->show_scope_axes);
@@ -700,7 +700,7 @@ void SettingsWidget::connectAll() {
     connect(darkProModeCheck, SIGNAL(clicked()), this, SLOT(updateColourTheme()));
     connect(highContrastModeCheck, SIGNAL(clicked()), this, SLOT(updateColourTheme()));
     connect(gui_transparency_slider, SIGNAL(valueChanged(int)), this, SLOT(updateTransparency(int)));
-    
+
     connect(show_scope_axes, SIGNAL(clicked()), this, SLOT(updateSettings()));
     connect(show_scopes, SIGNAL(clicked()), this, SLOT(updateSettings()));
     connect(show_scope_axes, SIGNAL(clicked()), this, SLOT(toggleScopeAxes()));
diff --git a/app/gui/qt/widgets/sonicpilexer.cpp b/app/gui/qt/widgets/sonicpilexer.cpp
index 5e44742ad..db638d2a3 100644
--- a/app/gui/qt/widgets/sonicpilexer.cpp
+++ b/app/gui/qt/widgets/sonicpilexer.cpp
@@ -23,7 +23,7 @@ SonicPiLexer::SonicPiLexer(SonicPiTheme *theme) : QsciLexerRuby() {
     this->setDefaultPaper(theme->color("Background"));
 }
 
-static char default_font[] = "Hack";
+static char default_font[] = "Monoid HalfTight";
 
 // triggers autocompletion for the next word
 QStringList SonicPiLexer::autoCompletionWordSeparators() const {
diff --git a/app/gui/qt/widgets/sonicpiscintilla.cpp b/app/gui/qt/widgets/sonicpiscintilla.cpp
index b2c5ca092..53da3512a 100644
--- a/app/gui/qt/widgets/sonicpiscintilla.cpp
+++ b/app/gui/qt/widgets/sonicpiscintilla.cpp
@@ -133,7 +133,7 @@ SonicPiScintilla::SonicPiScintilla(SonicPiLexer *lexer, SonicPiTheme *theme, QSt
 
   setMarginsBackgroundColor(theme->color("MarginBackground"));
   setMarginsForegroundColor(theme->color("MarginForeground"));
-  setMarginsFont(QFont("Hack", 15, -1, true));
+  setMarginsFont(QFont("Monoid HalfTight", 15, -1, true));
   setUtf8(true);
   setText("# Loading previous buffer contents. Please wait...");
   setLexer((QsciLexer *)lexer);
