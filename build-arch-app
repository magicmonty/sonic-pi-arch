#!/bin/bash

# Fail script on first error encountered
set -e

# Application/library versions built by this script.
OSMID_VERSION=391f35f789f18126003d2edf32902eb714726802

# Internal definitions
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SP_APP_SRC=${SCRIPT_DIR}
SP_ROOT=${SP_APP_SRC}/../../../../
OSMID_DIR=${SP_APP_SRC}/../../server/native/osmid

echo "This script has been tested on manjaro"

# Install osmid (for MIDI support)
# cd ${SP_ROOT}
# git clone https://github.com/llloret/osmid.git || true
# cd osmid
# git checkout ${OSMID_VERSION}

# Build Erlang files
cd ${SP_APP_SRC}/../../server/erlang
# The current implementation of osc.erl uses Erlang features that require
# at least Erlang 19.1 to be installed.
#  If versions < 19.1 are installed, and we use the current code, the MIDI
# implementation breaks because the Erlang OSC router is failing.
erlc osc.erl
erlc pi_server.erl

#Build sonic-pi server extensions, documentation, and binary.
cd ${SP_APP_SRC}
../../server/ruby/bin/compile-extensions.rb
../../server/ruby/bin/i18n-tool.rb -t
cp -f utils/ruby_help.tmpl utils/ruby_help.h
../../server/ruby/bin/qt-doc.rb -o utils/ruby_help.h
lrelease SonicPi.pro
mkdir -p build
cd build
cmake ..
cmake --build .
install sonic-pi -t ..

mkdir -p ${OSMID_DIR}
cd external/osmid-prefix/src/osmid-build

install m2o o2m -t ${OSMID_DIR}
